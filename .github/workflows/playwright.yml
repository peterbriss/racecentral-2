name: Playwright Tests
on:
  push:
    branches: [ci, main, staging]
  pull_request:
    branches: [main, staging]

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3
        id: node-cache
        name: Cache node_modules to speed up builds
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - uses: actions/cache@v3
        name: Cache Playwright to speed up builds
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
      - name: Install Yarn dependencies
        run: yarn install
        if: steps.node-cache.outputs.cache-hit != 'true'
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - name: Install Playwright for webkit which doesn't get cached
        run: npx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit == 'true'
      - name: Build nextjs app
        run: yarn build
        env:
        #   PLAYWRIGHT_PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}
        #   PLAYWRIGHT_USERNAME: ${{ secrets.PLAYWRIGHT_USERNAME }}
      - name: Run Playwright tests
        run: yarn playwright test
        env:
        #   PLAYWRIGHT_PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}
        #   PLAYWRIGHT_USERNAME: ${{ secrets.PLAYWRIGHT_USERNAME }}
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 3
